function vektorInit(){VektorChooser.devices=new VektorChooser.DeviceCollection,VektorChooser.additionalPackages=new VektorChooser.AdditionalPackageCollection,_.each(VektorChooser.deviceList,function(e){VektorChooser.devices.add(e)}),_.each(VektorChooser.additionalPackageList,function(e){VektorChooser.additionalPackages.add(e)}),VektorChooser.devices.forEach(function(e){var o=e.get("additionalPackages");if(0==o.length)return e;var t=VektorChooser.additionalPackages.byNameList(o);return t.forEach(function(o){e.setProps(o.get("props"))}),e})}function vektorModelsInit(){dataModel=new VektorChooser.DataModel,filterModel=new VektorChooser.FilterModel,resultModel=new VektorChooser.ResultModel}function vektorDetectPropertyType(e){return _.indexOf(dataModel.get("props"),e)>-1?"props":_.indexOf(dataModel.get("additionalProps"),e)>-1?"additionalProps":!1}function vektorResultDevices(e){VektorChooser.resultDevices=new VektorChooser.DeviceCollection(e)}function vSearch(e){jQuery("#result-area").html("<h1>Araçlar<h1>"),VektorChooser.resultDevices=VektorChooser.devices,VektorChooser.resultAdditionalPackages=VektorChooser.additionalPackages;var o=e.get("filters");_.each(o,function(e){VektorChooser.filteredDevices=VektorChooser.resultDevices.filterBy(e.key,e.value),vektorResultDevices(VektorChooser.filteredDevices)}),VektorChooser.events.trigger("result.update",VektorChooser.resultDevices),VektorChooser.resultDevices.forEach(function(e){jQuery("#result-area").append("<h2>"+e.get("name")+"<h2>"),e.get("additionalPackages").length&&jQuery("#result-area").append("<h4>Uyumlu paketler: "+e.get("additionalPackages")+"<h4>")}),jQuery("#result-area").append("<h2>Oluru olan paketler<h2>"),VektorChooser.resultAdditionalPackages.forEach(function(){})}function vektorSearch(e){this.filters=e.get("filters"),this.resultDevices=null,this.init=function(){VektorChooser.resultDevices=VektorChooser.devices,this.applyFilters(),this.setResultView()},this.applyFilters=function(){_.each(this.filters,function(e){return"additionalProps"==e.key?!1:(VektorChooser.resultDevices=VektorChooser.resultDevices.filterBy(e.key,e.value),void(VektorChooser.resultDevices=new VektorChooser.DeviceCollection(VektorChooser.resultDevices)))}),console.log("Device List",VektorChooser.resultDevices),VektorChooser.events.trigger("result.update",VektorChooser.resultDevices)},this.setResultView=function(){var e=jQuery("#result-area");e.html("<h1>Araçlar</h1>"),VektorChooser.resultDevices.forEach(function(o){e.append("<h2>"+o.get("name")+"</h2>"),o.get("additionalPackages").length&&e.append("<h4>Uyumlu paketler: "+o.get("additionalPackages")+"</h4>"),e.append("<p>Özellikler: "+o.get("props")+"</p>")});var o=resultModel.get("enabledPackages");o.length&&(e.append("<h1>Kullanılabilir paketler:</h1>"),o.forEach(function(o){e.append("<h2>Kullanılabilir paketler: "+o.get("name")+"</h2>")}))}}var VektorChooser=VektorChooser||{},dataModel,filterModel,resultModel;VektorChooser.deviceList={},VektorChooser.additionalPackageList={},VektorChooser.currentView={},VektorChooser.defaultProps=["Konum Takibi","Yolculuk Raporu","Anlık Uyarılar","Kural Tanımlama","Geçmiş Konumlar","Kendi Haritanı Yarat","Mesai İçi ve Dışı Kullanım","Rota Takibi","Otomatik Raporlama"],jQuery(function(){vektorInit(),vektorModelsInit(),VektorChooser.currentView.form=new VektorChooser.FormView(dataModel,filterModel,resultModel)});var VektorChooser=VektorChooser||{},VektorChooser=VektorChooser||{},VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.AdditionalPackageCollection=Backbone.Collection.extend({model:VektorChooser.AdditionalPackageModel,validFilters:["props","name"],filterBy:function(e,o){return-1==_.indexOf(this.validFilters,e)?!1:this.filter(function(t){var r=t.get(e);return _.isArray(r)?_.indexOf(r,o)>=0?!0:!1:_.isArray(o)?_.indexOf(o,r)>=0?!0:!1:t.get(e)==o})},byNameList:function(e){return this.models.filter(function(o){var t=o.get("name");return _.isArray(e)?_.indexOf(e,t)>=0:o.get("name")==e})},filterHasProps:function(e){return this.models.filter(function(o){var t=o.get("props");return _.isArray(e)?(console.log("INTERSECT:",_.intersection(t,e).length),_.intersection(t,e).length):_.indexOf(t,e)>=0})}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.DeviceCollection=Backbone.Collection.extend({model:VektorChooser.DeviceModel,filterBy:function(e,o){return this.filter(function(t){var r=t.get(e);return _.isArray(r)?_.indexOf(r,o)>=0?!0:!1:t.get(e)==o})}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.events={},_.extend(VektorChooser.events,Backbone.Events),VektorChooser.events.on("device.search",function(e){var o=new vektorSearch(e);o.init()}),VektorChooser.events.on("result.update",function(e){resultModel.set("devices",e),resultModel.setResults(),console.log("In Event:")})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.AdditionalPackageModel=Backbone.Model.extend({defaults:{name:"",devices:[],props:[]},initialize:function(){}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.DataModel=Backbone.Model.extend({defaults:{vehicleTypes:["Binek-Hafif Ticari","Ağır Vasıta","Frigo Treyler","Portatif","Motorsiklet"],props:["Konum Takibi","Yolculuk Raporu","Anlık Uyarılar","Kural Tanımlama","Geçmiş Konumlar","Kendi Haritanı Yarat","Mesai İçi ve Dışı Kullanım","Rota Takibi","Otomatik Raporlama","Yakıt Tüketim Raporu","Sürüş Analizi","Gerçek KM Tüketim","Tak-Çalıştır","Kablolu Montaj","Taşınabilir"],additionalProps:["Mesajlaşma","Navigasyon","Görev Atama","Isı","Depo","Menhol","Vana/Sayaç","Kapı","Sürücü","Carrier","ThermoKing","Uzaktan Veri İndirme","Günlük Sürüş Saati Takibi","Treyler ID"]},initialize:function(){}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.DeviceModel=Backbone.Model.extend({defaults:{name:"",vehicleTypes:[],props:[],additionalPackages:[],additionalProps:[]},initialize:function(){this.setProps(VektorChooser.defaultProps)},setProps:function(e){this.set("props",e.concat(this.get("props")))}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.FilterModel=Backbone.Model.extend({defaults:{filters:[],changeTime:"",vehicleTypes:[],props:[],additionalProps:[]},initialize:function(){this.updateChangeTime(),this.on("change:filters",this.setFilters)},resetFiltersTypes:function(){this.set("vehicleTypes",[]),this.set("props",[]),this.set("additionalProps",[])},setFilters:function(){var e=this.get("filters");this.resetFiltersTypes();var o=this;_.each(e,function(e){"vehicleTypes"==e.key?o.updateFilterItem(e,!0):o.updateFilterItem(e,!1)}),this.updateChangeTime(),VektorChooser.events.trigger("device.search",this)},updateChangeTime:function(){var e=new Date;this.set("changeTime",e.getTime())},updateFilterItem:function(e,o){var t=this.get(e.key);_.isArray(t)&&!o?t.push(e.value):t=[e.value],this.set(e.key,t)}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.ResultModel=Backbone.Model.extend({defaults:{devices:!1,packages:!1,changeTime:"",vehicleTypes:[],props:[],additionalPackages:[],additionalProps:[],enabledPackages:[],filterModel:!1},initialize:function(){},resetModel:function(){this.set("vehicleTypes",[]),this.set("props",[]),this.set("additionalPackages",[]),this.set("additionalProps",[]),this.set("enabledPackages",[])},setResults:function(){var e=this.get("devices");return e?(this.resetModel(),e.forEach(function(e){var o=_.union(window.resultModel.get("props"),e.get("props"));window.resultModel.set("props",o);var t=_.union(window.resultModel.get("additionalPackages"),e.get("additionalPackages"));window.resultModel.set("additionalPackages",t)}),this.updatePackageProps(),this.findAdditionalPackages(),void this.updateChangeTime()):!1},updateChangeTime:function(){var e=new Date;this.set("changeTime",e.getTime())},findAdditionalPackages:function(){var e=window.filterModel.get("additionalProps"),o=this.get("packages");if(o.length){var t=o.filterHasProps(e);console.log("selected Props",e,o),console.log("enabledPackages",t),t.length&&this.set("enabledPackages",t)}},updatePackageProps:function(){var e=this.get("additionalPackages");if(console.log("Packs Updated",e),0==e.length)return this.set("packages",!1),!1;VektorChooser.resultAdditionalPackages=VektorChooser.additionalPackages.byNameList(e),VektorChooser.resultAdditionalPackages=new VektorChooser.AdditionalPackageCollection(VektorChooser.resultAdditionalPackages),this.set("packages",VektorChooser.resultAdditionalPackages);var o=this.get("packages");o.forEach(function(e){var o=_.union(window.resultModel.get("additionalProps"),e.get("props"));window.resultModel.set("additionalProps",o)})}})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VDrive=new VektorChooser.DeviceModel({name:"VDrive",vehicleTypes:["Binek-Hafif Ticari","Ağır Vasıta"],props:["Tak-Çalıştır","Yakıt Tüketim Raporu","Sürüş Analizi","Gerçek KM Tüketim"],additionalPackages:[]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VDriveLite=new VektorChooser.DeviceModel({name:"VDrive Lite",vehicleTypes:["Binek-Hafif Ticari"],props:["Tak-Çalıştır"],additionalPackages:[]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VFleet=new VektorChooser.DeviceModel({name:"VFleet",vehicleTypes:["Binek-Hafif Ticari","Ağır Vasıta"],props:["Kablolu Montaj"],additionalPackages:["ViV","VSense"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VFleetCan=new VektorChooser.DeviceModel({name:"VFleet CAN",vehicleTypes:["Ağır Vasıta"],props:["Kablolu Montaj","Yakıt Tüketim Raporu","Sürüş Analizi","Gerçek KM Tüketim"],additionalPackages:["ViV","VSense","VTacho","VTrailer"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VMax=new VektorChooser.DeviceModel({name:"VMax",vehicleTypes:["Binek-Hafif Ticari","Frigo Treyler"],props:["Kablolu Montaj","Yakıt Tüketim Raporu","Sürüş Analizi","Gerçek KM Tüketim"],additionalPackages:["ViV","VSense","VFrigo"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VMini=new VektorChooser.DeviceModel({name:"VMini",vehicleTypes:["Portatif"],props:["Taşınabilir"],additionalPackages:[]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.deviceList.VMoto=new VektorChooser.DeviceModel({name:"VMoto",vehicleTypes:["Motorsiklet"],props:[],additionalPackages:[]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.additionalPackageList.VFrigo=new VektorChooser.AdditionalPackageModel({name:"VFrigo",devices:["VMax"],props:["Carrier","ThermoKing"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.additionalPackageList.VSense=new VektorChooser.AdditionalPackageModel({name:"VSense",devices:["VFleet","VFleet CAN","VMax"],props:["Isı","Depo","Menhol","Vana/Sayaç","Kapı","Sürücü"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.additionalPackageList.VTacho=new VektorChooser.AdditionalPackageModel({name:"VTacho",devices:["VFleet CAN"],props:["Uzaktan Veri İndirme","Günlük Sürüş Saati Takibi"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.additionalPackageList.VTrailer=new VektorChooser.AdditionalPackageModel({name:"VTrailer",devices:["VFleet CAN"],props:["Treyler ID"]})}();var VektorChooser=VektorChooser||{};!function(){"use strict";VektorChooser.additionalPackageList.ViV=new VektorChooser.AdditionalPackageModel({name:"ViV",devices:["VFleet","VFleet CAN","VMax"],props:["Mesajlaşma","Navigasyon","Görev Atama"]})}();var VektorChooser=VektorChooser||{};VektorChooser.FormView=Backbone.View.extend({tagName:"div",template:"",events:{"change .vc-filter-item":"updateFilters"},initialize:function(e,o,t){_.bindAll(this,"render"),this.dataModel=e,this.filterModel=o,this.resultModel=t,this.template=_.template(jQuery("#form-template").html()),this.render(),this.dataModel.on("change",this.render),this.filterModel.on("change:changeTime",this.render),this.resultModel.on("change:changeTime",this.render)},render:function(){return this.$el.html(this.template({data:this.dataModel.toJSON(),filter:this.filterModel.toJSON(),result:this.resultModel.toJSON()})),jQuery("#vc-form").append(this.$el),this},updateFilters:function(e){var o=jQuery(e.currentTarget);"vehicleTypes"==o.data("filter")&&jQuery(".vc-filter-item--props,.vc-filter-item--package").attr("checked",!1);var t=[];jQuery(".vc-filter-item:checked,.vc-filter-item:selected").each(function(){var e=jQuery(this),o=e.data("filter"),r=e.val();"yes"==e.data("additional")&&t.push({key:"additionalProps",value:r});var i={key:o,value:r};t.push(i)}),this.filterModel.set("filters",t)}});